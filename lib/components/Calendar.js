var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Calendar=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _dayjs=_interopRequireDefault(require("dayjs"));var _propTypes=_interopRequireDefault(require("prop-types"));var _native=require("styled-components/native");var _reactNativeCalendars=require("react-native-calendars");var _excluded=["selectedDate"];var _this=this,_jsxFileName="/home/runner/work/neeto-ui-rn/neeto-ui-rn/src/components/Calendar.js";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var Calendar=function Calendar(props){var selectedDate=props.selectedDate,rest=(0,_objectWithoutProperties2.default)(props,_excluded);delete rest.markedDates;var theme=(0,_react.useContext)(_native.ThemeContext);var isCurrentDay=(0,_dayjs.default)(selectedDate).isSame((0,_dayjs.default)(),"D");return _react.default.createElement(_reactNativeCalendars.Calendar,(0,_extends2.default)({key:selectedDate,current:selectedDate,firstDay:1,markedDates:(0,_defineProperty2.default)({},(0,_dayjs.default)(selectedDate).format("YYYY-MM-DD"),{selected:true}),theme:{arrowColor:theme.colors.font.primary,dotStyle:{height:0,width:0,marginTop:0},"stylesheet.calendar.header":{week:{marginVertical:10,flexDirection:"row",justifyContent:"space-around",alignItems:"center",fontFamily:theme.fonts.sf600},dayHeader:{flex:1,textAlign:"center",fontFamily:theme.fonts.sf600,fontSize:theme.fontSizes.xs,color:theme.colors.font.grey500,textTransform:"uppercase"},monthText:{fontFamily:theme.fonts.sf400,fontSize:theme.fontSizes.l,color:theme.colors.font.primary}},"stylesheet.day.basic":{base:{alignItems:"center",justifyContent:"center",height:26,width:26,borderRadius:5,borderWidth:1,borderColor:"transparent"},today:{borderColor:isCurrentDay?"transparent":theme.colors.border.base},selected:{backgroundColor:theme.colors.background.purple100},text:{fontFamily:theme.fonts.sf400,fontSize:theme.fontSizes.xs,color:theme.colors.font.primary,margin:0,padding:0},todayText:{color:theme.colors.font.base},selectedText:{fontFamily:theme.fonts.sf600,color:theme.colors.font.base},disabledText:{color:theme.colors.font.grey400}}}},rest,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:40,columnNumber:5}}));};exports.Calendar=Calendar;Calendar.propTypes={selectedDate:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.instanceOf(_dayjs.default)])};