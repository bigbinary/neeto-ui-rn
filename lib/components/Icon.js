var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Icon=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var React=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _=require("./");var CustomIcon=_interopRequireWildcard(require("../icons"));var _excluded=["name","size","color"];var _this=this,_jsxFileName="/Users/sudhishnair/Documents/BigBinary/neeto-ui-rn/src/components/Icon.js";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var Icon=function Icon(_ref){var name=_ref.name,size=_ref.size,color=_ref.color,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var IconName=name.startsWith("ri-")?name.substring(3):name;var iconComponentName=IconName.split("-").map(function(s){return s[0].toUpperCase()+s.substr(1);}).join("");var Component=CustomIcon[iconComponentName];return Component?React.createElement(Component,(0,_extends2.default)({},rest,{fill:color,width:size,height:size,__self:_this,__source:{fileName:_jsxFileName,lineNumber:15,columnNumber:5}})):React.createElement(_.Typography,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:17,columnNumber:5}},"Invalid Icon Name");};exports.Icon=Icon;Icon.defaultProps={name:"remixicon-fill",size:20,color:"grey"};Icon.propTypes={name:_propTypes.default.string,size:_propTypes.default.number,color:_propTypes.default.string};