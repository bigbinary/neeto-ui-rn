var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.CheckBox=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var _objectWithoutProperties2=_interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));var _react=_interopRequireWildcard(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _reactNativeRemixIcon=_interopRequireDefault(require("react-native-remix-icon"));var _native=require("styled-components/native");var _=require("./");var _excluded=["checked","onSelect","disabled","label","checkboxStyle","checkIconStyle","labelStyle"];var _this=this,_jsxFileName="/home/runner/work/neeto-ui-rn/neeto-ui-rn/src/components/CheckBox.jsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var CheckBox=function CheckBox(_ref){var checked=_ref.checked,onSelect=_ref.onSelect,disabled=_ref.disabled,label=_ref.label,checkboxStyle=_ref.checkboxStyle,checkIconStyle=_ref.checkIconStyle,labelStyle=_ref.labelStyle,rest=(0,_objectWithoutProperties2.default)(_ref,_excluded);var theme=(0,_react.useContext)(_native.ThemeContext);var disabledProps={bg:theme.colors.background[checked?"grey400":"white"],labelProps:{color:theme.colors.font.grey400}};var checkedProps={bg:theme.colors.background.base,labelProps:{fontFamily:theme.fonts.sf500,color:theme.colors.font.primary}};var unCheckedProps={bg:theme.colors.background.white,borderWidth:1,borderColor:theme.colors.border.secondary,labelProps:{fontFamily:theme.fonts.sf400,color:theme.colors.font.secondary}};return _react.default.createElement(_.Touchable,(0,_extends2.default)({alignItems:"center",disabled:disabled,flexDirection:"row",flexShrink:1,onPress:onSelect},rest,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:92,columnNumber:5}}),_react.default.createElement(_.Container,(0,_extends2.default)({alignItems:"center",borderRadius:3,height:16,justifyContent:"center",width:16},!checked&&unCheckedProps,checked&&checkedProps,disabled&&disabledProps,checkboxStyle,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:100,columnNumber:7}}),checked&&_react.default.createElement(_reactNativeRemixIcon.default,(0,_extends2.default)({color:theme.colors.font.white,name:"ri-check-line",size:14},checkIconStyle,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:112,columnNumber:11}}))),_react.default.createElement(_.Typography,(0,_extends2.default)({flex:1,fontSize:"m",ml:2},checked&&checkedProps.labelProps,!checked&&unCheckedProps.labelProps,disabled&&disabledProps.labelProps,labelStyle,{__self:_this,__source:{fileName:_jsxFileName,lineNumber:120,columnNumber:7}}),label));};exports.CheckBox=CheckBox;CheckBox.propTypes={checked:_propTypes.default.bool.isRequired,onSelect:_propTypes.default.func.isRequired,disabled:_propTypes.default.bool,label:_propTypes.default.string,checkboxStyle:_propTypes.default.object,checkIconStyle:_propTypes.default.object,labelStyle:_propTypes.default.object};CheckBox.defaultProps={checked:false,onSelect:function onSelect(){}};