// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Alert Alert Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Modal
            animationType="none"
            deviceHeight={null}
            deviceWidth={null}
            hardwareAccelerated={false}
            hideModalContentWhileAnimating={true}
            onBackdropPress={[Function]}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onRequestClose={[Function]}
            panResponderThreshold={4}
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            statusBarTranslucent={false}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              forwardedRef={[Function]}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "black",
                  "bottom": 0,
                  "height": 1334,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 750,
                }
              }
            />
            <View
              collapsable={false}
              deviceHeight={null}
              deviceWidth={null}
              forwardedRef={[Function]}
              hideModalContentWhileAnimating={true}
              nativeID="animatedComponent"
              onBackdropPress={[Function]}
              onModalHide={[Function]}
              onModalWillHide={[Function]}
              onModalWillShow={[Function]}
              panResponderThreshold={4}
              pointerEvents="box-none"
              scrollHorizontal={false}
              scrollOffset={0}
              scrollOffsetMax={0}
              scrollTo={null}
              statusBarTranslucent={false}
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                  "margin": 37.5,
                  "transform": Array [
                    Object {
                      "translateY": 0,
                    },
                  ],
                }
              }
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              swipeThreshold={100}
            >
              <View
                alignItems="center"
                bg="background.primary"
                borderRadius={20}
                color="background.primary"
                justifyContent="center"
                padding={20}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "borderRadius": 20,
                      "color": "#ffffff",
                      "justifyContent": "center",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "width": "90%",
                    },
                  ]
                }
                width="90%"
              >
                <Text
                  color="font.grey800"
                  fontFamily="inter700"
                  fontSize="l"
                  style={
                    Array [
                      Object {
                        "color": "#2f3941",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 18,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  
                </Text>
                <View
                  alignItems="center"
                  color="background.primary"
                  justifyContent="center"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#ffffff",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <Text
                    color="font.grey600"
                    fontFamily="inter400"
                    fontSize="l"
                    py={20}
                    style={
                      Array [
                        Object {
                          "color": "#68737d",
                          "fontFamily": "Inter-Regular",
                          "fontSize": 18,
                          "paddingBottom": 20,
                          "paddingTop": 20,
                          "textAlign": "center",
                        },
                      ]
                    }
                    textAlign="center"
                    textStyle="defaultTextStyle"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  flexDirection="row"
                  justifyContent="space-around"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "flexDirection": "row",
                        "justifyContent": "space-around",
                        "width": "100%",
                      },
                    ]
                  }
                  width="100%"
                >
                  <View
                    accessibilityState={
                      Object {
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    alignItems="center"
                    borderRadius={50}
                    collapsable={false}
                    flexDirection="row"
                    focusable={true}
                    height={35}
                    justifyContent="center"
                    label="OK"
                    minWidth={110}
                    nativeID="animatedComponent"
                    onClick={[Function]}
                    onLayout={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    p={0}
                    pointerEvents="box-only"
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#2f3941",
                        "borderRadius": 50,
                        "flexDirection": "row",
                        "height": 35,
                        "justifyContent": "center",
                        "minWidth": 110,
                        "paddingBottom": 0,
                        "paddingLeft": 0,
                        "paddingRight": 0,
                        "paddingTop": 0,
                      }
                    }
                    variant="solid"
                  >
                    <Text
                      fontFamily="inter400"
                      fontSize="m"
                      mx={1}
                      style={
                        Array [
                          Object {
                            "color": "#ffffff",
                            "fontFamily": "Inter-Regular",
                            "fontSize": 14,
                            "marginLeft": 4,
                            "marginRight": 4,
                            "textAlign": "center",
                          },
                        ]
                      }
                      textAlign="center"
                      textStyle="solid"
                    >
                      OK
                    </Text>
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "bottom": 0,
                            "left": 0,
                            "overflow": "hidden",
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {
                            "borderRadius": 50,
                          },
                        ]
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </Modal>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="With Default Button"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              With Default Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Single Button"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Single Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Two Buttons"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Two Buttons
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Three Buttons"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Three Buttons
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Non Cancelable "
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Non Cancelable 
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Avatars Avatar Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            bg="background.parentView"
            borderRadius={42}
            color="background.primary"
            height={84}
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderRadius": 42,
                  "color": "#ffffff",
                  "height": 84,
                  "justifyContent": "center",
                  "width": 84,
                },
              ]
            }
            width={84}
          >
            <Text
              color="font.primary"
              fontFamily="inter700"
              fontSize={34}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 34,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              OS
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Avatars Image Sizes 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Image
              alignItems="center"
              justifyContent="center"
              margin={2}
              onError={[Function]}
              source={
                Object {
                  "uri": "https://picsum.photos/100",
                }
              }
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 40,
                  "height": 80,
                  "width": 80,
                }
              }
            />
            <Text
              fontSize="xl"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 24,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              82 * 82 (Default size)
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Image
              alignItems="center"
              justifyContent="center"
              margin={3}
              onError={[Function]}
              source={
                Object {
                  "uri": "broken url test",
                }
              }
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 30,
                  "height": 60,
                  "width": 60,
                }
              }
            />
            <Text
              fontSize="l"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 18,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              Broken image url
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Image
              alignItems="center"
              justifyContent="center"
              margin={3}
              onError={[Function]}
              source={
                Object {
                  "uri": "https://picsum.photos/100",
                }
              }
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 24,
                  "height": 48,
                  "width": 48,
                }
              }
            />
            <Text
              fontSize="l"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 18,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              48 * 48
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Image
              alignItems="center"
              justifyContent="center"
              margin={3}
              onError={[Function]}
              source={
                Object {
                  "uri": "https://picsum.photos/100",
                }
              }
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 21,
                  "height": 42,
                  "width": 42,
                }
              }
            />
            <Text
              fontSize="m"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 14,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              42 * 42
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Image
              alignItems="center"
              justifyContent="center"
              margin={3}
              onError={[Function]}
              source={
                Object {
                  "uri": "https://picsum.photos/100",
                }
              }
              style={
                Object {
                  "alignSelf": "center",
                  "borderRadius": 16,
                  "height": 32,
                  "width": 32,
                }
              }
            />
            <Text
              fontSize="s"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              32 * 32
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Avatars Text BG Colors 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            flex={1}
            justifyContent="center"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.white"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#ffffff",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.grey600"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                BG White
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.black"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#000000",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.grey600"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                BG Black
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.secondary"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e4e4e7",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.grey600"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                BG Secondary
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.danger"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#ff6969",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.grey600"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                BG Danger
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Avatars Text Colors 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            flex={1}
            justifyContent="center"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.grey200"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e9ebed",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.white"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Font White
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.grey200"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e9ebed",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.black"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Font Black
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.grey200"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e9ebed",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.secondary"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#828282",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Font Secondary
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.grey200"
                borderRadius={21}
                color="background.primary"
                height={42}
                justifyContent="center"
                m={2}
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e9ebed",
                      "borderRadius": 21,
                      "color": "#ffffff",
                      "height": 42,
                      "justifyContent": "center",
                      "marginBottom": 8,
                      "marginLeft": 8,
                      "marginRight": 8,
                      "marginTop": 8,
                      "width": 42,
                    },
                  ]
                }
                width={42}
              >
                <Text
                  color="font.danger"
                  fontFamily="inter700"
                  fontSize={14}
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 14,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  OS
                </Text>
              </View>
              <Text
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Font Danger
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Avatars Text Sizes 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="background.grey200"
              borderRadius={40}
              color="background.primary"
              height={80}
              justifyContent="center"
              m={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e9ebed",
                    "borderRadius": 40,
                    "color": "#ffffff",
                    "height": 80,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 8,
                    "width": 80,
                  },
                ]
              }
              width={80}
            >
              <Text
                color="font.grey600"
                fontFamily="inter700"
                fontSize={32}
                style={
                  Array [
                    Object {
                      "color": "#68737d",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 32,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                OS
              </Text>
            </View>
            <Text
              fontSize="xl"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 24,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              82 * 82 (Default size)
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="background.grey200"
              borderRadius={24}
              color="background.primary"
              height={48}
              justifyContent="center"
              m={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e9ebed",
                    "borderRadius": 24,
                    "color": "#ffffff",
                    "height": 48,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 8,
                    "width": 48,
                  },
                ]
              }
              width={48}
            >
              <Text
                color="font.grey600"
                fontFamily="inter700"
                fontSize={16}
                style={
                  Array [
                    Object {
                      "color": "#68737d",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 16,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                OS
              </Text>
            </View>
            <Text
              fontSize="l"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 18,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              48 * 48
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="background.grey200"
              borderRadius={21}
              color="background.primary"
              height={42}
              justifyContent="center"
              m={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e9ebed",
                    "borderRadius": 21,
                    "color": "#ffffff",
                    "height": 42,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 8,
                    "width": 42,
                  },
                ]
              }
              width={42}
            >
              <Text
                color="font.grey600"
                fontFamily="inter700"
                fontSize={14}
                style={
                  Array [
                    Object {
                      "color": "#68737d",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                OS
              </Text>
            </View>
            <Text
              fontSize="m"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 14,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              42 * 42
            </Text>
          </View>
          <View
            alignItems="center"
            color="background.primary"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "color": "#ffffff",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="background.grey200"
              borderRadius={16}
              color="background.primary"
              height={32}
              justifyContent="center"
              m={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e9ebed",
                    "borderRadius": 16,
                    "color": "#ffffff",
                    "height": 32,
                    "justifyContent": "center",
                    "marginBottom": 8,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "marginTop": 8,
                    "width": 32,
                  },
                ]
              }
              width={32}
            >
              <Text
                color="font.grey600"
                fontFamily="inter700"
                fontSize={14}
                style={
                  Array [
                    Object {
                      "color": "#68737d",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                OS
              </Text>
            </View>
            <Text
              fontSize="s"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              32 * 32
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Badge Badge Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Default
          </Text>
          <View
            alignItems="center"
            bg="background.base"
            borderRadius="13.5px"
            color="background.primary"
            height="27px"
            justifyContent="center"
            maxHeight="25px"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2f3941",
                  "borderRadius": 13.5,
                  "color": "#ffffff",
                  "height": 27,
                  "justifyContent": "center",
                  "maxHeight": 25,
                  "width": 36,
                },
              ]
            }
            width="36px"
          >
            <Text
              color="font.primary"
              fontFamily="inter400"
              fontSize="xs"
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 10,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              test
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Badge Badges 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            flex={1}
            justifyContent="center"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="7.875px"
                color="background.primary"
                height="15.75px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 7.875,
                      "color": "#ffffff",
                      "height": 15.75,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 21,
                    },
                  ]
                }
                width="21px"
              />
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Default size
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              >
                <Text
                  color="font.white"
                  fontFamily="inter400"
                  fontSize="xs"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 10,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  3
                </Text>
              </View>
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Custom size 32.
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              >
                <Text
                  color="font.white"
                  fontFamily="inter400"
                  fontSize="16px"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  3
                </Text>
              </View>
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Custom fontSize
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              />
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                without content
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.secondary"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#e4e4e7",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              >
                <Text
                  color="font.secondary"
                  fontFamily="inter400"
                  fontSize="12px"
                  style={
                    Array [
                      Object {
                        "color": "#828282",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 12,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  test
                </Text>
              </View>
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                custom background color
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              >
                <Text
                  color="font.danger"
                  fontFamily="inter400"
                  fontSize="12px"
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                        "fontFamily": "Inter-Regular",
                        "fontSize": 12,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  test
                </Text>
              </View>
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                custom font color
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              mb={4}
              px={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "marginBottom": 32,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                bg="background.base"
                borderRadius="12px"
                color="background.primary"
                height="24px"
                justifyContent="center"
                maxHeight="25px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#2f3941",
                      "borderRadius": 12,
                      "color": "#ffffff",
                      "height": 24,
                      "justifyContent": "center",
                      "maxHeight": 25,
                      "width": 32,
                    },
                  ]
                }
                width="32px"
              >
                <Text
                  color="font.white"
                  fontFamily="inter700"
                  fontSize="12px"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "fontFamily": "Inter-Bold",
                        "fontSize": 12,
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  test
                </Text>
              </View>
              <Text
                fontSize="l"
                px={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 18,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                custom font family
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Bottom Sheet Bottom Sheet Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Select Project"
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Select Project
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <Modal
            animationType="none"
            deviceHeight={null}
            deviceWidth={null}
            hardwareAccelerated={false}
            hideModalContentWhileAnimating={true}
            onBackdropPress={[Function]}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onRequestClose={[Function]}
            panResponderThreshold={4}
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            statusBarTranslucent={false}
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
            transparent={true}
            visible={false}
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              forwardedRef={[Function]}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "black",
                  "bottom": 0,
                  "height": 1334,
                  "left": 0,
                  "opacity": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 750,
                }
              }
            />
            <View
              onLayout={[Function]}
              pointerEvents="box-none"
              style={
                Array [
                  Array [
                    Object {
                      "margin": 37.5,
                      "transform": Array [
                        Object {
                          "translateY": 0,
                        },
                      ],
                    },
                    Object {
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    Object {
                      "alignItems": "flex-end",
                      "flexDirection": "row",
                      "margin": 0,
                    },
                    Object {
                      "margin": 0,
                    },
                  ],
                  Object {
                    "paddingBottom": 0,
                  },
                ]
              }
            >
              <View
                collapsable={false}
                deviceHeight={null}
                deviceWidth={null}
                forwardedRef={[Function]}
                hideModalContentWhileAnimating={true}
                nativeID="animatedComponent"
                onBackdropPress={[Function]}
                onModalHide={[Function]}
                onModalWillHide={[Function]}
                onModalWillShow={[Function]}
                panResponderThreshold={4}
                pointerEvents="box-none"
                scrollHorizontal={false}
                scrollOffset={0}
                scrollOffsetMax={0}
                scrollTo={null}
                statusBarTranslucent={false}
                style={
                  Object {
                    "alignItems": "flex-end",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "margin": 0,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                swipeThreshold={100}
              >
                <View
                  bg="background.primary"
                  borderTopLeftRadius={20}
                  borderTopRightRadius={20}
                  color="background.primary"
                  flex={1}
                  maxHeight={200}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderTopLeftRadius": 20,
                        "borderTopRightRadius": 20,
                        "color": "#ffffff",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "maxHeight": 200,
                      },
                    ]
                  }
                >
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                      ]
                    }
                  >
                    <View
                      alignItems="center"
                      bg="background.primary"
                      borderRadius={20}
                      color="background.primary"
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      px={2}
                      py={20}
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#ffffff",
                            "borderRadius": 20,
                            "color": "#ffffff",
                            "paddingBottom": 20,
                            "paddingLeft": 8,
                            "paddingRight": 8,
                            "paddingTop": 20,
                          },
                        ]
                      }
                    >
                      <Text
                        color="font.secondary"
                        fontFamily="inter700"
                        style={
                          Array [
                            Object {
                              "color": "#828282",
                              "fontFamily": "Inter-Bold",
                              "fontSize": 12,
                            },
                          ]
                        }
                        textStyle="subtext"
                      >
                        PROJECT
                      </Text>
                    </View>
                    <View
                      bg="border.primary"
                      color="background.primary"
                      height="1px"
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#e4e4e7",
                            "color": "#ffffff",
                            "height": 1,
                            "width": "100%",
                          },
                        ]
                      }
                      width="100%"
                    />
                    <RCTScrollView
                      contentContainerStyle={
                        Object {
                          "paddingBottom": 40,
                        }
                      }
                      data={
                        Array [
                          "neeto-ui-rn",
                          "aceinvoice-rn",
                          "",
                          "reactnative-hq",
                        ]
                      }
                      getItem={[Function]}
                      getItemCount={[Function]}
                      initialNumToRender={4}
                      keyExtractor={[Function]}
                      onContentSizeChange={[Function]}
                      onLayout={[Function]}
                      onMomentumScrollBegin={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      removeClippedSubviews={false}
                      renderItem={[Function]}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      viewabilityConfigCallbackPairs={Array []}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": false,
                              }
                            }
                            accessible={true}
                            alignItems="center"
                            bg="background.primary"
                            borderRadius={20}
                            collapsable={false}
                            focusable={true}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onLayout={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            px={2}
                            py={12}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#ffffff",
                                "borderRadius": 20,
                                "paddingBottom": 12,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 12,
                              }
                            }
                          >
                            <Text
                              fontFamily="inter400"
                              style={
                                Array [
                                  Object {
                                    "color": "#1b1f23",
                                    "fontFamily": "Inter-Regular",
                                    "fontSize": 14,
                                  },
                                ]
                              }
                              textStyle="body"
                            >
                              neeto-ui-rn
                            </Text>
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 20,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            bg="border.primary"
                            color="background.primary"
                            height="1px"
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#e4e4e7",
                                  "color": "#ffffff",
                                  "height": 1,
                                  "width": "100%",
                                },
                              ]
                            }
                            width="100%"
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": false,
                              }
                            }
                            accessible={true}
                            alignItems="center"
                            bg="background.primary"
                            borderRadius={20}
                            collapsable={false}
                            focusable={true}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onLayout={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            px={2}
                            py={12}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#ffffff",
                                "borderRadius": 20,
                                "paddingBottom": 12,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 12,
                              }
                            }
                          >
                            <Text
                              fontFamily="inter400"
                              style={
                                Array [
                                  Object {
                                    "color": "#1b1f23",
                                    "fontFamily": "Inter-Regular",
                                    "fontSize": 14,
                                  },
                                ]
                              }
                              textStyle="body"
                            >
                              aceinvoice-rn
                            </Text>
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 20,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            bg="border.primary"
                            color="background.primary"
                            height="1px"
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#e4e4e7",
                                  "color": "#ffffff",
                                  "height": 1,
                                  "width": "100%",
                                },
                              ]
                            }
                            width="100%"
                          />
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        />
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessibilityState={
                              Object {
                                "disabled": false,
                              }
                            }
                            accessible={true}
                            alignItems="center"
                            bg="background.primary"
                            borderRadius={20}
                            collapsable={false}
                            focusable={true}
                            nativeID="animatedComponent"
                            onClick={[Function]}
                            onLayout={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            pointerEvents="box-only"
                            px={2}
                            py={12}
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "#ffffff",
                                "borderRadius": 20,
                                "paddingBottom": 12,
                                "paddingLeft": 8,
                                "paddingRight": 8,
                                "paddingTop": 12,
                              }
                            }
                          >
                            <Text
                              fontFamily="inter400"
                              style={
                                Array [
                                  Object {
                                    "color": "#1b1f23",
                                    "fontFamily": "Inter-Regular",
                                    "fontSize": 14,
                                  },
                                ]
                              }
                              textStyle="body"
                            >
                              reactnative-hq
                            </Text>
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "bottom": 0,
                                    "left": 0,
                                    "overflow": "hidden",
                                    "position": "absolute",
                                    "right": 0,
                                    "top": 0,
                                  },
                                  Object {
                                    "borderRadius": 20,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            bg="border.primary"
                            color="background.primary"
                            height="1px"
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#e4e4e7",
                                  "color": "#ffffff",
                                  "height": 1,
                                  "width": "100%",
                                },
                              ]
                            }
                            width="100%"
                          />
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </View>
          </Modal>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Button Group Button Group Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <View
            alignSelf="center"
            border="1px solid"
            borderColor="background.grey500"
            borderRadius={2}
            color="background.primary"
            flexDirection="row"
            justifyContent="space-between"
            my={3}
            style={
              Array [
                Object {
                  "alignSelf": "center",
                  "borderColor": "#87929d",
                  "borderRadius": 2,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "color": "#ffffff",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              bg="background.grey500"
              borderColor="background.grey500"
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              px={3}
              style={
                Object {
                  "backgroundColor": "#87929d",
                  "borderColor": "#87929d",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                color="background.primary"
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Button1
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              bg="background.primary"
              borderColor="background.grey500"
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              px={3}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#87929d",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                color="background.grey500"
                fontSize="m"
                style={
                  Array [
                    Object {
                      "color": "#87929d",
                      "fontSize": 14,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Button2
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Button Group Button Groups 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            my={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 8,
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              alignSelf="center"
              border="1px solid"
              borderColor="background.grey600"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              justifyContent="space-between"
              my={3}
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "borderColor": "#68737d",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "marginBottom": 16,
                    "marginTop": 16,
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey600"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#68737d",
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="background.white"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button1
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.white"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="background.grey600"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button2
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            color="background.primary"
            my={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 8,
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              alignSelf="center"
              border="1px solid"
              borderColor="background.grey600"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              justifyContent="space-between"
              my={3}
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "borderColor": "#68737d",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "marginBottom": 16,
                    "marginTop": 16,
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey600"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#68737d",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="background.white"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button1
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.white"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="background.grey600"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button2
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.white"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="background.grey600"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#68737d",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button3
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
          <View
            color="background.primary"
            my={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 8,
                  "marginTop": 8,
                },
              ]
            }
          >
            <View
              alignSelf="center"
              border="1px solid"
              borderColor="#68737d"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              justifyContent="space-between"
              my={3}
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "borderColor": "#68737d",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "marginBottom": 16,
                    "marginTop": 16,
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="#e9ebed"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#e9ebed",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="#ff6969"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button1
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="#e9ebed"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#e9ebed",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="#ff6969"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button2
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="#ff6969"
                border="#68737d"
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                pointerEvents="box-only"
                px={3}
                style={
                  Object {
                    "backgroundColor": "#ff6969",
                    "borderColor": "#68737d",
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "paddingBottom": 8,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 8,
                  }
                }
              >
                <Text
                  color="#e9ebed"
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#e9ebed",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  Button3
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Buttons Button Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            backgroundColor="background.primary"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Button Component"
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="inverse"
          >
            <Text
              color="font.black"
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Button Component
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Buttons Buttons 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
              },
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Default is solid"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Default is solid
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Default Disabled"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Default Disabled
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Solid Button"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Solid Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Solid Button Disabled"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Solid Button Disabled
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Inverse Button"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Inverse Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Invese Button Disabled"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Invese Button Disabled
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Text Button"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "color": "#2f3941",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="text"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="text"
            >
              Text Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Text Button Disabled"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "color": "#2f3941",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="text"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="text"
            >
              Text Button Disabled
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Like"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Like
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              👍
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Subscribe and Follow"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              📣
            </Text>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Subscribe and Follow
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              🔔
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Unsubscribe Disabled"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Unsubscribe Disabled
            </Text>
            <Text
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              🔕
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            bg="background.primary"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Logout"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              color="font.danger"
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ff6969",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Logout
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            bg="background.primary"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Bigger Button"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              color="font.danger"
              fontFamily="inter700"
              fontSize="xl"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ff6969",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 24,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Bigger Button
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Regular inter 400"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <Text
              fontFamily="inter400"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Regular",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Regular inter 400
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Icon in extreme right"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Icon in extreme right
            </Text>
            <View
              alignItems="flex-end"
              color="background.primary"
              flex={1}
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "color": "#ffffff",
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                🔔
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Solid Loading "
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <View
              color="background.primary"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "marginLeft": 4,
                    "marginRight": 4,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="white"
                size="small"
              />
            </View>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Loading…
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Solid Loading "
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="solid"
            width={200}
          >
            <View
              color="background.primary"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "marginLeft": 4,
                    "marginRight": 4,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="white"
                size="small"
              />
            </View>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Inverse Loading "
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderColor": "#2f3941",
                "borderRadius": 2,
                "borderStyle": "solid",
                "borderWidth": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="inverse"
            width={200}
          >
            <View
              color="background.primary"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "marginLeft": 4,
                    "marginRight": 4,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="black"
                size="small"
              />
            </View>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="inverse"
            >
              Loading…
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Text Loading"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "color": "#2f3941",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="text"
            width={200}
          >
            <View
              color="background.primary"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "marginLeft": 4,
                    "marginRight": 4,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="black"
                size="small"
              />
            </View>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="text"
            >
              Loading…
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Text Loading"
            my={9}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 2,
                "color": "#2f3941",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 9,
                "marginTop": 9,
                "opacity": 0.5,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
                "width": 200,
              }
            }
            variant="text"
            width={200}
          >
            <View
              color="background.primary"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "marginLeft": 4,
                    "marginRight": 4,
                  },
                ]
              }
            >
              <ActivityIndicator
                color="black"
                size="small"
              />
            </View>
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#2f3941",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="text"
            >
              Ordering Pizza...
            </Text>
            <View
              color="background.primary"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                  },
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                🍕
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Chip Chip Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": true,
              }
            }
            accessible={true}
            alignItems="center"
            backgroundColor="#f8f9f9"
            bg="background.white"
            border="1px solid"
            borderColor="border.grey400"
            borderRadius={20}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={2}
            padding={10}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#f8f9f9",
                "borderColor": "#c2c8cc",
                "borderRadius": 20,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "paddingBottom": 10,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              }
            }
          >
            <Text
              color="font.primary"
              fontFamily="inter400"
              mx={2}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontFamily": "Inter-Regular",
                    "marginLeft": 8,
                    "marginRight": 8,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              Chip Component
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 20,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Chip Chips 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.grey200"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e9ebed",
                  "borderRadius": 20,
                  "flexDirection": "row",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                📣
              </Text>
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Solid chip with icon
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.white"
              border="1px solid"
              borderColor="border.grey400"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#c2c8cc",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                📣
              </Text>
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Outlined chip with icon
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.grey200"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              opacity={0.5}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e9ebed",
                  "borderRadius": 20,
                  "flexDirection": "row",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                📣
              </Text>
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Solid chip disabled
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.white"
              border="1px solid"
              borderColor="border.grey400"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              opacity={0.5}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#c2c8cc",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "opacity": 0.5,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                📣
              </Text>
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Outlined chip disabled
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.white"
              border="1px solid"
              borderColor="border.grey400"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "borderColor": "#c2c8cc",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "flexDirection": "row",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Outlined chip
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": true,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.grey200"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e9ebed",
                  "borderRadius": 20,
                  "flexDirection": "row",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Solid chip
              </Text>
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                bg="background.grey500"
                borderRadius={10}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={
                  Object {
                    "backgroundColor": "#87929d",
                    "borderRadius": 10,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={14}
                  bbWidth={14}
                  fill="white"
                  focusable={false}
                  height={14}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 14,
                        "width": 14,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={14}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 10,
                      },
                    ]
                  }
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            color="background.primary"
            my={1}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              alignItems="center"
              bg="background.grey200"
              borderRadius={20}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#e9ebed",
                  "borderRadius": 20,
                  "flexDirection": "row",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                }
              }
            >
              <Text
                color="font.primary"
                fontFamily="inter400"
                mx={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontFamily": "Inter-Regular",
                      "marginLeft": 8,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Default Chip
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots FABs FABS 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            flex={1}
            justifyContent="center"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                alignItems="center"
                borderColor={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2f3941",
                    "borderRadius": 28,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="solid"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  🔔
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Default Button
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                alignItems="center"
                bg={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "borderColor": "#2f3941",
                    "borderRadius": 28,
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="inverse"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  ➕
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Inverse Button
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                alignItems="center"
                borderColor={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2f3941",
                    "borderRadius": 28,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "opacity": 0.5,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="solid"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  🔔
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Disabled Default Button
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": true,
                  }
                }
                accessible={true}
                alignItems="center"
                bg={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "borderColor": "#2f3941",
                    "borderRadius": 28,
                    "borderStyle": "solid",
                    "borderWidth": 2,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "opacity": 0.5,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="inverse"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  ➕
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Disabled Inverse Button
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                alignItems="center"
                borderColor={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2f3941",
                    "borderRadius": 28,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="solid"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  🔔
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Default Button with shadow style
              </Text>
            </View>
            <View
              alignItems="center"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                alignItems="center"
                bg="font.danger"
                borderColor={false}
                borderRadius={28}
                collapsable={false}
                focusable={true}
                justifyContent="center"
                m={9}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                size={56}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ff6969",
                    "borderRadius": 28,
                    "elevation": 5,
                    "height": 56,
                    "justifyContent": "center",
                    "marginBottom": 9,
                    "marginLeft": 9,
                    "marginRight": 9,
                    "marginTop": 9,
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 2,
                      "width": 0,
                    },
                    "shadowOpacity": 0.25,
                    "shadowRadius": 3.84,
                    "width": 56,
                  }
                }
                variant="solid"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                      },
                    ]
                  }
                  textStyle="defaultTextStyle"
                >
                  🔔
                </Text>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 28,
                      },
                    ]
                  }
                />
              </View>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                    },
                  ]
                }
                textStyle="defaultTextStyle"
              >
                Button with Background color
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots FABs FABS Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            bg=""
            borderColor={false}
            borderRadius={28}
            collapsable={false}
            focusable={true}
            justifyContent="center"
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            pointerEvents="box-only"
            size={56}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 28,
                "elevation": 5,
                "height": 56,
                "justifyContent": "center",
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.25,
                "shadowRadius": 3.84,
                "width": 56,
              }
            }
            variant="solid"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              🔔
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 28,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Font Colors 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <View
            backgroundColor="background.base"
            color="background.primary"
            style={
              Array [
                Object {
                  "backgroundColor": "#2f3941",
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              color="font.white"
              fontSize="xxl"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 32,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              White
            </Text>
          </View>
          <Text
            color="font.black"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Black
          </Text>
          <Text
            color="font.base"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#2f3941",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Base
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Primary
          </Text>
          <Text
            color="font.secondary"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#828282",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Secondary
          </Text>
          <Text
            color="font.danger"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#ff6969",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Danger
          </Text>
          <Text
            color="font.grey100"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#f8f9f9",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey
          </Text>
          <Text
            color="font.grey100"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#f8f9f9",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 100
          </Text>
          <Text
            color="font.grey200"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#e9ebed",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 200
          </Text>
          <Text
            color="font.grey300"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#d8dcde",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 300
          </Text>
          <Text
            color="font.grey400"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#c2c8cc",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 400
          </Text>
          <Text
            color="font.grey500"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#87929d",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 500
          </Text>
          <Text
            color="font.grey600"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#68737d",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 600
          </Text>
          <Text
            color="font.grey800"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#2f3941",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Grey 800
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Font Families 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            fontFamily="inter400"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Inter Regular 400
          </Text>
          <Text
            fontFamily="inter700"
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontFamily": "Inter-Bold",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Inter Bold 700
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Font Sizes 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            fontSize="xs"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 10,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            xs as 10px
          </Text>
          <Text
            fontSize="s"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 12,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            s as 12px
          </Text>
          <Text
            fontSize="m"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 14,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            m as 14px
          </Text>
          <Text
            fontSize="l"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 18,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            l as 18px
          </Text>
          <Text
            fontSize="xl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 24,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            xl as 24px
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            xxl as 32px
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Text Decoration 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textDecorationColor": "black",
                  "textDecorationLine": "underline",
                  "textDecorationStyle": "solid",
                },
              ]
            }
            textDecoration="underline"
            textStyle="defaultTextStyle"
          >
            Underline
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textDecorationColor": "black",
                  "textDecorationLine": "line-through",
                  "textDecorationStyle": "solid",
                },
              ]
            }
            textDecoration="line-through"
            textStyle="defaultTextStyle"
          >
            Line through
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textDecorationColor": "black",
                  "textDecorationLine": "underline line-through",
                  "textDecorationStyle": "solid",
                },
              ]
            }
            textDecoration="underline line-through"
            textStyle="defaultTextStyle"
          >
            Underline and line through
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Text Styles 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontFamily": "Inter-Bold",
                  "fontSize": 18,
                },
              ]
            }
            textStyle="header"
          >
            Header
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 14,
                },
              ]
            }
            textStyle="body"
          >
            Body
          </Text>
          <Text
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 12,
                },
              ]
            }
            textStyle="subtext"
          >
            Subtext
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Text Transformation 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textTransform": "uppercase",
                },
              ]
            }
            textStyle="defaultTextStyle"
            textTransform="uppercase"
          >
            uppercase text
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textTransform": "lowercase",
                },
              ]
            }
            textStyle="defaultTextStyle"
            textTransform="lowercase"
          >
            lowercase text
          </Text>
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textTransform": "capitalize",
                },
              ]
            }
            textStyle="defaultTextStyle"
            textTransform="capitalize"
          >
            capitalized text
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Foundation/Typography Typography Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            color="font.primary"
            fontFamily="inter400"
            fontSize="xs"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 10,
                  "textDecorationColor": "black",
                  "textDecorationLine": "none",
                  "textDecorationStyle": "solid",
                  "textTransform": "none",
                },
              ]
            }
            text="Typography"
            textDecoration="none"
            textStyle="header"
            textTransform="none"
          >
            Typography
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Home Home 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            fontSize="xxl"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 32,
                  "textAlign": "center",
                },
              ]
            }
            textAlign="center"
            textStyle="defaultTextStyle"
          >
            Please open navigator from the bottom left tab and select a story to preview.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Input Input Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          style={
            Array [
              Object {
                "color": "#ffffff",
              },
            ]
          }
        >
          <Text
            mb="7px"
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 12,
                  "marginBottom": 7,
                },
              ]
            }
            textStyle="subtext"
          >
            Default
          </Text>
          <View
            border="1px"
            borderColor="#e4e4e7"
            borderRadius={2}
            color="background.primary"
            flexDirection="column"
            onBlur={[Function]}
            onFocus={[Function]}
            position="relative"
            style={
              Array [
                Object {
                  "borderColor": "#e4e4e7",
                  "borderRadius": 2,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "color": "#ffffff",
                  "flexDirection": "column",
                },
              ]
            }
          >
            <View
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "width": "100%",
                  },
                ]
              }
              width="100%"
            >
              <TextInput
                color="#1b1f23"
                defaultValue={null}
                editable={true}
                flex={1}
                fontFamily="inter400"
                fontSize="16px"
                height={40}
                keyboardType="default"
                placeholder="placeholder"
                px={2}
                secureTextEntry={false}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontFamily": "Inter-Regular",
                      "fontSize": 16,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                    },
                  ]
                }
                textAlignVertical="top"
                textStyle="subtext"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Input Inputs 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Default Input
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Input with Focus styles
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              with placeholder
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  placeholder="Placeholder"
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              color="font.danger"
              fontFamily="inter700"
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#ff6969",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              with custom label styles
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="red"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  placeholder="Placeholder"
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "red",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              with value
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                  value="has value"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Disabled
            </Text>
            <View
              bg="#e4e4e7"
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              opacity={0.5}
              position="relative"
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                    "opacity": 0.5,
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={false}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              with error message
            </Text>
            <View
              border="1px"
              borderColor="#ff6969"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#ff6969",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#ff6969"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
            <Text
              color="#ff6969"
              style={
                Array [
                  Object {
                    "color": "#ff6969",
                    "fontSize": 12,
                  },
                ]
              }
              textStyle="subtext"
            >
              This is an error
            </Text>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Email
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="font.primary"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  keyboardType="email-address"
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                  value="bigbinary@example.com"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Password
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={true}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                  value="passwordpasswordpasswordpasswordpasswordpasswordpasswordpasswordpassword"
                />
                <View
                  color="background.primary"
                  justifyContent="center"
                  mx="4px"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "justifyContent": "center",
                        "marginLeft": 4,
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#87929d"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    onPress={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    responsible={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <RNSVGGroup
                      fill={4287074973}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M0 0h24v24H0z"
                        fill={null}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M17.882 19.297A10.949 10.949 0 0112 21c-5.392 0-9.878-3.88-10.819-9a10.982 10.982 0 013.34-6.066L1.392 2.808l1.415-1.415 19.799 19.8-1.415 1.414-3.31-3.31zM5.935 7.35A8.965 8.965 0 003.223 12a9.005 9.005 0 0013.201 5.838l-2.028-2.028A4.5 4.5 0 018.19 9.604L5.935 7.35zm6.979 6.978l-3.242-3.242a2.5 2.5 0 003.241 3.241zm7.893 2.264l-1.431-1.43A8.935 8.935 0 0020.777 12 9.005 9.005 0 009.552 5.338L7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.947 10.947 0 01-2.012 4.592zm-9.084-9.084a4.5 4.5 0 014.769 4.769l-4.77-4.769z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              border="0"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 0,
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignSelf="flex-end"
                color="background.primary"
                maxWidth={100}
                style={
                  Array [
                    Object {
                      "alignSelf": "flex-end",
                      "color": "#ffffff",
                      "maxWidth": 100,
                    },
                  ]
                }
              >
                <Text
                  mb="12px"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "fontSize": 12,
                        "marginBottom": 12,
                      },
                    ]
                  }
                  textStyle="subtext"
                >
                  inline input with password type
                </Text>
              </View>
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={true}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                  value="test"
                />
                <View
                  color="background.primary"
                  justifyContent="center"
                  mx="4px"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "justifyContent": "center",
                        "marginLeft": 4,
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  <RNSVGSvgView
                    align="xMidYMid"
                    bbHeight={24}
                    bbWidth={24}
                    fill="#87929d"
                    focusable={false}
                    height={24}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    onPress={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    responsible={true}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "flex": 0,
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                    vbHeight={24}
                    vbWidth={24}
                    width={24}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <RNSVGGroup
                      fill={4287074973}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M0 0h24v24H0z"
                        fill={null}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M17.882 19.297A10.949 10.949 0 0112 21c-5.392 0-9.878-3.88-10.819-9a10.982 10.982 0 013.34-6.066L1.392 2.808l1.415-1.415 19.799 19.8-1.415 1.414-3.31-3.31zM5.935 7.35A8.965 8.965 0 003.223 12a9.005 9.005 0 0013.201 5.838l-2.028-2.028A4.5 4.5 0 018.19 9.604L5.935 7.35zm6.979 6.978l-3.242-3.242a2.5 2.5 0 003.241 3.241zm7.893 2.264l-1.431-1.43A8.935 8.935 0 0020.777 12 9.005 9.005 0 009.552 5.338L7.974 3.76C9.221 3.27 10.58 3 12 3c5.392 0 9.878 3.88 10.819 9a10.947 10.947 0 01-2.012 4.592zm-9.084-9.084a4.5 4.5 0 014.769 4.769l-4.77-4.769z"
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
            <View
              backgroundColor="#e4e4e7"
              height={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "height": 1,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              border="0"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 0,
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignSelf="flex-end"
                color="background.primary"
                maxWidth={100}
                style={
                  Array [
                    Object {
                      "alignSelf": "flex-end",
                      "color": "#ffffff",
                      "maxWidth": 100,
                    },
                  ]
                }
              >
                <Text
                  mb="12px"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "fontSize": 12,
                        "marginBottom": 12,
                      },
                    ]
                  }
                  textStyle="subtext"
                >
                  Inline
                </Text>
              </View>
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
            <View
              backgroundColor="#e4e4e7"
              height={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "height": 1,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              border="0"
              borderColor="#ff6969"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#ff6969",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 0,
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                alignSelf="flex-end"
                color="background.primary"
                maxWidth={100}
                style={
                  Array [
                    Object {
                      "alignSelf": "flex-end",
                      "color": "#ffffff",
                      "maxWidth": 100,
                    },
                  ]
                }
              >
                <Text
                  mb="12px"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "fontSize": 12,
                        "marginBottom": 12,
                      },
                    ]
                  }
                  textStyle="subtext"
                >
                  Inline with error
                </Text>
              </View>
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#ff6969"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#ff6969",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
            <View
              backgroundColor="#e4e4e7"
              height={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "height": 1,
                  },
                ]
              }
            />
            <Text
              color="#ff6969"
              style={
                Array [
                  Object {
                    "color": "#ff6969",
                    "fontSize": 12,
                  },
                ]
              }
              textStyle="subtext"
            >
              
            </Text>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              bg="#e4e4e7"
              border="0"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="row"
              onBlur={[Function]}
              onFocus={[Function]}
              opacity={0.5}
              position="relative"
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 0,
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "opacity": 0.5,
                  },
                ]
              }
            >
              <View
                alignSelf="flex-end"
                color="background.primary"
                maxWidth={100}
                style={
                  Array [
                    Object {
                      "alignSelf": "flex-end",
                      "color": "#ffffff",
                      "maxWidth": 100,
                    },
                  ]
                }
              >
                <Text
                  mb="12px"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "fontSize": 12,
                        "marginBottom": 12,
                      },
                    ]
                  }
                  textStyle="subtext"
                >
                  inline disabled input
                </Text>
              </View>
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={false}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
            <View
              backgroundColor="#e4e4e7"
              height={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#e4e4e7",
                    "height": 1,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Brand Left
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <View
                  bg="background.menubackground"
                  color="background.primary"
                  justifyContent="center"
                  px={2}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#f4f5f7",
                        "color": "#ffffff",
                        "justifyContent": "center",
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                >
                  <Text
                    color="font.grey600"
                    style={
                      Array [
                        Object {
                          "color": "#68737d",
                        },
                      ]
                    }
                    textStyle="defaultTextStyle"
                  >
                    BRAND-LEFT
                  </Text>
                </View>
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Brand Right
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
                <View
                  bg="background.menubackground"
                  color="background.primary"
                  justifyContent="center"
                  px={2}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#f4f5f7",
                        "color": "#ffffff",
                        "justifyContent": "center",
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                >
                  <Text
                    color="font.grey600"
                    style={
                      Array [
                        Object {
                          "color": "#68737d",
                        },
                      ]
                    }
                    textStyle="defaultTextStyle"
                  >
                    BRAND-RIGHT
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Custom brand color and background
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
                <View
                  bg="background.danger"
                  color="background.primary"
                  justifyContent="center"
                  px={2}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#ff6969",
                        "color": "#ffffff",
                        "justifyContent": "center",
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                >
                  <Text
                    color="font.white"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                      ]
                    }
                    textStyle="defaultTextStyle"
                  >
                    BRAND-RIGHT
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <Text
              mb="7px"
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginBottom": 7,
                  },
                ]
              }
              textStyle="subtext"
            >
              Notes
            </Text>
            <View
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={100}
                  multiline={true}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              backgroundColor="background.grey200"
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={10}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "backgroundColor": "#e9ebed",
                    "borderColor": "#e4e4e7",
                    "borderRadius": 10,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <View
                  alignSelf="center"
                  color="background.primary"
                  mx="4px"
                  style={
                    Array [
                      Object {
                        "alignSelf": "center",
                        "color": "#ffffff",
                        "marginLeft": 4,
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  <View
                    color="background.primary"
                    flexDirection="row"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "flexDirection": "row",
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={20}
                      bbWidth={20}
                      fill="#2f3941"
                      focusable={false}
                      height={20}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "flex": 0,
                            "height": 20,
                            "width": 20,
                          },
                        ]
                      }
                      vbHeight={24}
                      vbWidth={24}
                      width={20}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <RNSVGGroup
                        fill={4281284929}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                        />
                        <RNSVGPath
                          d="M18.031 16.617l4.283 4.282-1.415 1.415-4.282-4.283A8.96 8.96 0 0111 20c-4.968 0-9-4.032-9-9s4.032-9 9-9 9 4.032 9 9a8.96 8.96 0 01-1.969 5.617zm-2.006-.742A6.977 6.977 0 0018 11c0-3.868-3.133-7-7-7-3.868 0-7 3.132-7 7 0 3.867 3.132 7 7 7a6.977 6.977 0 004.875-1.975l.15-.15z"
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  placeholder="Search"
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
              </View>
            </View>
          </View>
        </View>
        <View
          color="background.primary"
          mb={20}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "marginBottom": 20,
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
              ]
            }
          >
            <View
              backgroundColor="background.grey200"
              border="1px"
              borderColor="#e4e4e7"
              borderRadius={2}
              color="background.primary"
              flexDirection="column"
              onBlur={[Function]}
              onFocus={[Function]}
              position="relative"
              style={
                Array [
                  Object {
                    "backgroundColor": "#e9ebed",
                    "borderColor": "#e4e4e7",
                    "borderRadius": 2,
                    "borderStyle": "solid",
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "column",
                  },
                ]
              }
            >
              <View
                color="background.primary"
                flexDirection="row"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "flexDirection": "row",
                      "width": "100%",
                    },
                  ]
                }
                width="100%"
              >
                <TextInput
                  color="#1b1f23"
                  editable={true}
                  flex={1}
                  fontFamily="inter400"
                  fontSize="16px"
                  height={40}
                  px={2}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "color": "#1b1f23",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontFamily": "Inter-Regular",
                        "fontSize": 16,
                        "paddingLeft": 8,
                        "paddingRight": 8,
                      },
                    ]
                  }
                  textAlignVertical="top"
                  textStyle="subtext"
                />
                <View
                  alignSelf="center"
                  color="background.primary"
                  mx="4px"
                  style={
                    Array [
                      Object {
                        "alignSelf": "center",
                        "color": "#ffffff",
                        "marginLeft": 4,
                        "marginRight": 4,
                      },
                    ]
                  }
                >
                  <View
                    color="background.primary"
                    flexDirection="row"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "flexDirection": "row",
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      align="xMidYMid"
                      bbHeight={20}
                      bbWidth={20}
                      fill="#2f3941"
                      focusable={false}
                      height={20}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Object {
                            "flex": 0,
                            "height": 20,
                            "width": 20,
                          },
                        ]
                      }
                      vbHeight={24}
                      vbWidth={24}
                      width={20}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <RNSVGGroup
                        fill={4281284929}
                        propList={
                          Array [
                            "fill",
                          ]
                        }
                      >
                        <RNSVGPath
                          d="M0 0h24v24H0z"
                          fill={null}
                          propList={
                            Array [
                              "fill",
                            ]
                          }
                        />
                        <RNSVGPath
                          d="M18.031 16.617l4.283 4.282-1.415 1.415-4.282-4.283A8.96 8.96 0 0111 20c-4.968 0-9-4.032-9-9s4.032-9 9-9 9 4.032 9 9a8.96 8.96 0 01-1.969 5.617zm-2.006-.742A6.977 6.977 0 0018 11c0-3.868-3.133-7-7-7-3.868 0-7 3.132-7 7 0 3.867 3.132 7 7 7a6.977 6.977 0 004.875-1.975l.15-.15z"
                        />
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots OtpInputs Otp Inputs Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            style={
              Array [
                Object {
                  "color": "#ffffff",
                },
                Object {
                  "marginBottom": 5,
                  "marginTop": 5,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
              style={Object {}}
            >
              <View
                color="background.primary"
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                    },
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                        "borderColor": "#e4e4e7",
                        "borderRadius": 6,
                        "borderWidth": 1,
                        "margin": 5,
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    accessibilityLabel="otp"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "transparent",
                          "color": "#828282",
                          "fontFamily": "Inter-Bold",
                          "fontSize": 24,
                          "minHeight": 40,
                          "minWidth": 40,
                          "paddingTop": 5,
                          "textAlign": "center",
                          "textAlignVertical": "center",
                        },
                        Object {},
                        undefined,
                      ]
                    }
                    testID="otp"
                  >
                    
                  </Text>
                </View>
                <TextInput
                  keyboardType="phone-pad"
                  onChangeText={[Function]}
                  selectionColor="transparent"
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "color": "transparent",
                      "fontSize": 0,
                      "height": "100%",
                      "position": "absolute",
                      "width": "100%",
                    }
                  }
                  value=""
                />
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 0,
                    },
                  ]
                }
              />
            </View>
          </View>
          <Text
            fontSize="xl"
            py={10}
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 24,
                  "paddingBottom": 10,
                  "paddingTop": 10,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Your entered OTP is 
          </Text>
          <View
            alignItems="center"
            bg="background.grey500"
            color="background.primary"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#87929d",
                  "color": "#ffffff",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              fontSize="xl"
              py={10}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 24,
                    "paddingBottom": 10,
                    "paddingTop": 10,
                  },
                ]
              }
              textStyle="defaultTextStyle"
            >
              With Custom Styles
            </Text>
            <View
              color="background.primary"
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                  },
                  Object {
                    "marginBottom": 5,
                    "marginTop": 5,
                  },
                ]
              }
            >
              <View
                accessibilityState={
                  Object {
                    "disabled": false,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onLayout={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                style={Object {}}
              >
                <View
                  color="background.primary"
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                      },
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <View
                    color="background.primary"
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                        },
                        Object {
                          "backgroundColor": "#ffffff",
                          "borderColor": "#e4e4e7",
                          "borderRadius": 6,
                          "borderWidth": 1,
                          "margin": 5,
                        },
                        Object {
                          "backgroundColor": "#2f3941",
                        },
                      ]
                    }
                  >
                    <Text
                      accessibilityLabel="otp"
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "color": "#828282",
                            "fontFamily": "Inter-Bold",
                            "fontSize": 24,
                            "minHeight": 40,
                            "minWidth": 40,
                            "paddingTop": 5,
                            "textAlign": "center",
                            "textAlignVertical": "center",
                          },
                          Object {},
                          Object {
                            "color": "#ffffff",
                          },
                        ]
                      }
                      testID="otp"
                    >
                      
                    </Text>
                  </View>
                  <TextInput
                    keyboardType="phone-pad"
                    onChangeText={[Function]}
                    selectionColor="transparent"
                    style={
                      Object {
                        "backgroundColor": "transparent",
                        "color": "transparent",
                        "fontSize": 0,
                        "height": "100%",
                        "position": "absolute",
                        "width": "100%",
                      }
                    }
                    value=""
                  />
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "bottom": 0,
                        "left": 0,
                        "overflow": "hidden",
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      Object {
                        "borderRadius": 0,
                      },
                    ]
                  }
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots PopOver Popovers 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            p={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              alignItems="center"
              borderRadius={2}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              justifyContent="center"
              label="With Data"
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={12}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2f3941",
                  "borderRadius": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                }
              }
              variant="solid"
            >
              <Text
                fontFamily="inter700"
                fontSize="s"
                mx={1}
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 12,
                      "marginLeft": 4,
                      "marginRight": 4,
                      "textAlign": "center",
                    },
                  ]
                }
                textAlign="center"
                textStyle="solid"
              >
                With Data
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 2,
                    },
                  ]
                }
              />
            </View>
            <Modal
              hardwareAccelerated={true}
              onRequestClose={[Function]}
              onShow={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                ]
              }
              transparent={true}
              visible={false}
            />
          </View>
          <View
            color="background.primary"
            p={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              alignItems="center"
              borderRadius={2}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              justifyContent="center"
              label="With Custom Popup Content"
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={12}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2f3941",
                  "borderRadius": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                }
              }
              variant="solid"
            >
              <Text
                fontFamily="inter700"
                fontSize="s"
                mx={1}
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 12,
                      "marginLeft": 4,
                      "marginRight": 4,
                      "textAlign": "center",
                    },
                  ]
                }
                textAlign="center"
                textStyle="solid"
              >
                With Custom Popup Content
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 2,
                    },
                  ]
                }
              />
            </View>
            <Modal
              hardwareAccelerated={true}
              onRequestClose={[Function]}
              onShow={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                ]
              }
              transparent={true}
              visible={false}
            />
          </View>
          <View
            color="background.primary"
            p={2}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              accessibilityState={
                Object {
                  "disabled": false,
                }
              }
              accessible={true}
              alignItems="center"
              borderRadius={2}
              collapsable={false}
              flexDirection="row"
              focusable={true}
              justifyContent="center"
              label="With Custom Popup Content and data"
              nativeID="animatedComponent"
              onClick={[Function]}
              onLayout={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={12}
              pointerEvents="box-only"
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2f3941",
                  "borderRadius": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                }
              }
              variant="solid"
            >
              <Text
                fontFamily="inter700"
                fontSize="s"
                mx={1}
                style={
                  Array [
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 12,
                      "marginLeft": 4,
                      "marginRight": 4,
                      "textAlign": "center",
                    },
                  ]
                }
                textAlign="center"
                textStyle="solid"
              >
                With Custom Popup Content and data
              </Text>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "bottom": 0,
                      "left": 0,
                      "overflow": "hidden",
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    },
                    Object {
                      "borderRadius": 2,
                    },
                  ]
                }
              />
            </View>
            <Modal
              hardwareAccelerated={true}
              onRequestClose={[Function]}
              onShow={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                ]
              }
              transparent={true}
              visible={false}
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Rich Text Editor Rich Text Editor Component 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          flex={1}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              Object {
                "flexGrow": 1,
              }
            }
            keyboardShouldPersistTaps="handled"
            showsHorizontalScrollIndicator={false}
            showsVerticalScrollIndicator={true}
            style={
              Array [
                Object {},
              ]
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    undefined,
                  ]
                }
              >
                <RNCWebView
                  autoCapitalize="off"
                  bounces={false}
                  cacheEnabled={true}
                  contentInset={Object {}}
                  dataDetectorTypes="none"
                  defaultParagraphSeparator="div"
                  disabled={false}
                  domStorageEnabled={false}
                  editorInitializedCallback={[Function]}
                  hideKeyboardAccessoryView={true}
                  initialContentHTML="Rich Text Component..."
                  initialFocus={true}
                  initialHeight={0}
                  injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
                  injectedJavaScriptForMainFrameOnly={true}
                  javaScriptEnabled={true}
                  keyboardDisplayRequiresUserAction={false}
                  messagingEnabled={true}
                  nestedScrollEnabled={true}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onContentProcessDidTerminate={[Function]}
                  onFocus={[Function]}
                  onHttpError={[Function]}
                  onLoad={[Function]}
                  onLoadingError={[Function]}
                  onLoadingFinish={[Function]}
                  onLoadingProgress={[Function]}
                  onLoadingStart={[Function]}
                  onMessage={[Function]}
                  onShouldStartLoadWithRequest={[Function]}
                  opacity={0}
                  pasteAsPlainText={false}
                  placeholder="Type here..."
                  scrollEnabled={false}
                  source={
                    Object {
                      "html": "
<!DOCTYPE html>
<html>
<head>
    <title>RN Rich Text Editor</title>
    <meta name=\\"viewport\\" content=\\"user-scalable=1.0,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0\\">
    <style>
        
        * {outline: 0px solid transparent;-webkit-tap-highlight-color: rgba(0,0,0,0);-webkit-touch-callout: none;box-sizing: border-box;}
        html, body { margin: 0; padding: 0;font-family: Arial, Helvetica, sans-serif; font-size:1em; height: 100%}
        body { overflow-y: hidden; -webkit-overflow-scrolling: touch;background-color: #FFF;caret-color: ;}
        .content {font-family: Arial, Helvetica, sans-serif;color: #828282; width: 100%;height:100%;-webkit-overflow-scrolling: touch;padding-left: 0;padding-right: 0;}
        .pell { height: 100%;} .pell-content { outline: 0; overflow-y: auto;padding: 10px;height: 100%;}
    </style>
    <style>
        [placeholder]:empty:before { content: attr(placeholder); color: #a9a9a9;}
        [placeholder]:empty:focus:before { content: attr(placeholder);color: #a9a9a9;display:block;}
    </style>
    
    <style>
        video {max-width: 98%;margin-left:auto;margin-right:auto;display: block;}
        img {max-width: 98%;vertical-align: middle;}
        table {width: 100% !important;}
        table td {width: inherit;}
        table span { font-size: 12px !important; }
        .x-todo li {list-style:none;}
        .x-todo-box {position: relative; left: -24px;}
        .x-todo-box input{position: absolute;}
        blockquote{border-left: 6px solid #ddd;padding: 5px 0 5px 10px;margin: 15px 0 15px 15px;}
        hr{display: block;height: 0; border: 0;border-top: 1px solid #ccc; margin: 15px 0; padding: 0;}
        pre{padding: 10px 5px 10px 10px;margin: 15px 0;display: block;line-height: 18px;background: #F0F0F0;border-radius: 6px;font-size: 13px; font-family: 'monaco', 'Consolas', \\"Liberation Mono\\", Courier, monospace; word-break: break-all; word-wrap: break-word;overflow-x: auto;}
        pre code {display: block;font-size: inherit;white-space: pre-wrap;color: inherit;}
    </style>
    
    <style></style>
</head>
<body>
<div class=\\"content\\"><div id=\\"editor\\" class=\\"pell\\"/></div>
<script>
    var __DEV__ = !!true;
    var _ = (function (exports) {
        var anchorNode, focusNode, anchorOffset, focusOffset, _focusCollapse = false, cNode;
        var _log = console.log;
        var placeholderColor = '#a9a9a9';
        var _randomID = 99;
        var generateId = function (){
            return \\"auto_\\" + (++ _randomID);
        }

        var body = document.body, docEle = document.documentElement;
        var defaultParagraphSeparatorString = 'defaultParagraphSeparator';
        var formatBlock = 'formatBlock';
        var editor = null, editorFoucs = false, o_height = 0, compositionStatus = 0, paragraphStatus = 0, enterStatus = 0;
        function addEventListener(parent, type, listener) {
            return parent.addEventListener(type, listener);
        };
        function appendChild(parent, child) {
            return parent.appendChild(child);
        };
        function createElement(tag) {
            return document.createElement(tag);
        };
        function queryCommandState(command) {
            return document.queryCommandState(command);
        };
        function queryCommandValue(command) {
            return document.queryCommandValue(command);
        };
        function query(command){
            return document.querySelector(command);
        }
        function querys(command){
            return document.querySelectorAll(command);
        }

        function exec(command) {
            var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            return document.execCommand(command, false, value);
        };

        function asyncExec(command){
            var args = Array.prototype.slice.call(arguments);
            setTimeout(function(){
                exec.apply(null, args);
            }, 0);
        }

        function _postMessage(data){
            exports.window.postMessage(JSON.stringify(data));
        }
        function postAction(data){
            editor.content.contentEditable === 'true' && _postMessage(data);
        };

        exports.isRN && (
            console.log = function (){
                var data = Array.prototype.slice.call(arguments);
                __DEV__ && _log.apply(null, data);
                __DEV__ && postAction({type: 'LOG', data});
            }
        )

        function formatParagraph(async){
            (async ? asyncExec: exec)(formatBlock, '<' + editor.paragraphSeparator + '>' );
        }

        function getNodeByClass(node, className){
            return node ? (node.nodeType === Node.ELEMENT_NODE && node.classList.contains(className)? node : getNodeByClass(node.parentNode, className)): node;
        }

        function getNodeByName(node, name){
            return node? (node.nodeType === Node.ELEMENT_NODE && node.nodeName === name? node: getNodeByName(node.parentNode, name)): node;
        }

        function setCollapse(node){
            var selection = window.getSelection();
            selection.selectAllChildren(node);
            selection.collapseToEnd();
        }

        function checkboxNode(node){
            return getNodeByClass(node, 'x-todo');
        }

        function execCheckboxList (node, html){
            var html = createCheckbox(node ? node.innerHTML: '');
            var HTML = \\"<ol class='x-todo'><li>\\"+ html +\\"</li></ol>\\"
            var foNode;
            if (node){
                node.innerHTML = HTML;
                foNode = node.firstChild;
            } else {
                exec(\\"insertHTML\\", HTML);
            }

            foNode && setTimeout(function (){
                setCollapse(foNode);
            });
        }

        var _checkboxFlag = 0; // 1 = add checkbox; 2 = cancel checkbox
        function cancelCheckboxList(box){
            _checkboxFlag = 2;
            exec(\\"insertOrderedList\\");
            setCollapse(box);
        }

        function createCheckbox(end){
            var html = '<span contenteditable=\\"false\\" class=\\"x-todo-box\\"><input type=\\"checkbox\\"></span>';
            if (end && typeof end !== 'boolean'){
                html += end;
            } else if(end !== false){
                html += \\"<br/>\\"
            }
            return html;
        }

        function insertCheckbox (node){
            var li = getNodeByName(node, 'LI');
            li.insertBefore(document.createRange().createContextualFragment(createCheckbox(false)), li.firstChild);
            setCollapse(node);
        }

        function getCheckbox (node){
            return getNodeByClass(node, \\"x-todo-box\\");
        }

        function saveSelection(){
            var sel = window.getSelection();
            anchorNode = sel.anchorNode;
            anchorOffset = sel.anchorOffset;
            focusNode = sel.focusNode;
            focusOffset = sel.focusOffset;
        }

        function focusCurrent(){
            editor.content.focus();
            try {
                var selection = window.getSelection();
                if (anchorNode){
                    if (anchorNode !== selection.anchorNode && !selection.containsNode(anchorNode)){
                        _focusCollapse = true;
                        selection.collapse(anchorNode, anchorOffset);
                    }
                } else if(true && !_focusCollapse ){
                    _focusCollapse = true;
                    selection.selectAllChildren(editor.content);
                    selection.collapseToEnd();
                }
            } catch(e){
                console.log(e)
            }
        }

        var _keyDown = false;
        function handleChange (event){
            var node = anchorNode;
            Actions.UPDATE_HEIGHT();
            Actions.UPDATE_OFFSET_Y();
            if (_keyDown){
                if(_checkboxFlag === 1 && checkboxNode(node)){
                    _checkboxFlag = 0;
                    var sib = node.previousSibling;
                    if (!sib || sib.childNodes.length > 1){
                        insertCheckbox(node);
                    }
                } else if(_checkboxFlag === 2){
                    _checkboxFlag = 0;
                    var sp = createElement(editor.paragraphSeparator);
                    var br = createElement('br');
                    sp.appendChild(br);
                    setTimeout(function (){
                        if (!node.classList.contains(\\"x-todo-box\\")){
                            node = node.parentNode.previousSibling;
                        }
                        node.parentNode.replaceChild(sp, node);
                        setCollapse(sp);
                    });
                }
            }
        }

        var Actions = {
            bold: { state: function() { return queryCommandState('bold'); }, result: function() { return exec('bold'); }},
            italic: { state: function() { return queryCommandState('italic'); }, result: function() { return exec('italic'); }},
            underline: { state: function() { return queryCommandState('underline'); }, result: function() { return exec('underline'); }},
            strikeThrough: { state: function() { return queryCommandState('strikeThrough'); }, result: function() { return exec('strikeThrough'); }},
            subscript: { state: function() { return queryCommandState('subscript'); }, result: function() { return exec('subscript'); }},
            superscript: { state: function() { return queryCommandState('superscript'); }, result: function() { return exec('superscript'); }},
            heading1: { state: function() { return queryCommandValue(formatBlock) === 'h1'; }, result: function() { return exec(formatBlock, '<h1>'); }},
            heading2: { state: function() { return queryCommandValue(formatBlock) === 'h2'; }, result: function() { return exec(formatBlock, '<h2>'); }},
            heading3: { state: function() { return queryCommandValue(formatBlock) === 'h3'; }, result: function() { return exec(formatBlock, '<h3>'); }},
            heading4: { state: function() { return queryCommandValue(formatBlock) === 'h4'; }, result: function() { return exec(formatBlock, '<h4>'); }},
            heading5: { state: function() { return queryCommandValue(formatBlock) === 'h5'; }, result: function() { return exec(formatBlock, '<h5>'); }},
            heading6: { state: function() { return queryCommandValue(formatBlock) === 'h6'; }, result: function() { return exec(formatBlock, '<h6>'); }},
            paragraph: { state: function() { return queryCommandValue(formatBlock) === 'p'; }, result: function() { return exec(formatBlock, '<p>'); }},
            quote: { result: function() { return exec(formatBlock, '<blockquote>'); }},
            removeFormat: { result: function() { return exec('removeFormat'); }},
            orderedList: {
                state: function() { return !checkboxNode(window.getSelection().anchorNode) && queryCommandState('insertOrderedList'); },
                result: function() { if (!!checkboxNode(window.getSelection().anchorNode)) return;return exec('insertOrderedList'); }
            },
            unorderedList: {
                state: function() { return queryCommandState('insertUnorderedList');},
                result: function() { if (!!checkboxNode(window.getSelection().anchorNode)) return; return exec('insertUnorderedList');}
            },
            code: { result: function(type) {
                var flag = exec(formatBlock, '<pre>');
                var node = anchorNode.nodeName === \\"PRE\\" ? anchorNode: anchorNode.parentNode;
                if (node.nodeName === 'PRE'){
                    type && node.setAttribute(\\"type\\", type);
                    node.innerHTML = \\"<code type='\\"+(type || '') +\\"'>\\" + node.innerHTML + \\"</code>\\";
                    // var br = createElement(\\"br\\");
                    // node.parentNode.insertBefore(br, node.nextSibling);
                    setTimeout(function (){
                        setCollapse(node.firstChild);
                    });
                }
                return flag;
             }},
            line: { result: function() { return exec('insertHorizontalRule'); }},
            redo: { result: function() { return exec('redo'); }},
            undo: { result: function() { return exec('undo'); }},
            indent: { result: function() { return exec('indent'); }},
            outdent: { result: function() { return exec('outdent'); }},
            outdent: { result: function() { return exec('outdent'); }},
            justifyCenter: {  state: function() { return queryCommandState('justifyCenter'); }, result: function() { return exec('justifyCenter'); }},
            justifyLeft: { state: function() { return queryCommandState('justifyLeft'); }, result: function() { return exec('justifyLeft'); }},
            justifyRight: { state: function() { return queryCommandState('justifyRight'); }, result: function() { return exec('justifyRight'); }},
            justifyFull: { state: function() { return queryCommandState('justifyFull'); }, result: function() { return exec('justifyFull'); }},
            hiliteColor: {  state: function() { return queryCommandState('hiliteColor'); }, result: function(color) { return exec('hiliteColor', color); }},
            foreColor: { state: function() { return queryCommandState('foreColor'); }, result: function(color) { return exec('foreColor', color); }},
            fontSize: { result: function(size) { return exec('fontSize', size); }},
            fontName: { result: function(name) { return exec('fontName', name); }},
            link: {
                result: function(data) {
                    data = data || {};
                    var title = data.title;
                    title = title || window.getSelection().toString();
                    // title = title || window.prompt('Enter the link title');
                    var url = data.url || window.prompt('Enter the link URL');
                    if (url){
                        exec('insertHTML', \\"<a href='\\"+ url +\\"'>\\"+(title || url)+\\"</a>\\");
                    }
                }
            },
            image: {
                result: function(url, style) {
                    if (url){
                        exec('insertHTML', \\"<img style='\\"+ (style || '')+\\"' src='\\"+ url +\\"'/>\\");
                        Actions.UPDATE_HEIGHT();
                    }
                }
            },
            html: {
                result: function (html){
                    if (html){
                        exec('insertHTML', html);
                        Actions.UPDATE_HEIGHT();
                    }
                }
            },
            text: { result: function (text){ text && exec('insertText', text); }},
            video: {
                result: function(url, style) {
                    if (url) {
                        var thumbnail = url.replace(/.(mp4|m3u8)/g, '') + '-thumbnail';
                        var html = \\"<br><div style='\\"+ (style || '')+\\"'><video src='\\"+ url +\\"' poster='\\"+ thumbnail + \\"' controls><source src='\\"+ url +\\"' type='video/mp4'>No video tag support</video></div><br>\\";
                        exec('insertHTML', html);
                        Actions.UPDATE_HEIGHT();
                    }
                }
            },
            checkboxList: {
                state: function(){return checkboxNode(window.getSelection().anchorNode)},
                result: function() {
                    if (queryCommandState('insertOrderedList')) return;
                    var pNode;
                    if (anchorNode){
                        pNode = anchorNode.parentNode;
                        if (anchorNode === editor.content) pNode = null;
                    }

                    if (anchorNode === editor.content || queryCommandValue(formatBlock) === ''){
                        formatParagraph();
                    }
                    var box = checkboxNode(anchorNode);
                    if (!!box){
                        cancelCheckboxList(box.parentNode);
                    } else {
                        !queryCommandState('insertOrderedList') && execCheckboxList(pNode);
                    }
                }
            },
            content: {
                setDisable: function(dis){ this.blur(); editor.content.contentEditable = !dis},
                setHtml: function(html) { editor.content.innerHTML = html; Actions.UPDATE_HEIGHT(); },
                getHtml: function() { return editor.content.innerHTML; },
                blur: function() { editor.content.blur(); },
                focus: function() { focusCurrent(); },
                postHtml: function (){ postAction({type: 'CONTENT_HTML_RESPONSE', data: editor.content.innerHTML}); },
                setPlaceholder: function(placeholder){ editor.content.setAttribute(\\"placeholder\\", placeholder) },

                setContentStyle: function(styles) {
                    styles = styles || {};
                    var bgColor = styles.backgroundColor, color = styles.color, pColor = styles.placeholderColor;
                    if (bgColor && bgColor !== body.style.backgroundColor) body.style.backgroundColor = bgColor;
                    if (color && color !== editor.content.style.color) editor.content.style.color = color;
                    if (pColor && pColor !== placeholderColor){
                        var rule1=\\"[placeholder]:empty:before {content:attr(placeholder);color:\\"+pColor+\\";}\\";
                        var rule2=\\"[placeholder]:empty:focus:before{content:attr(placeholder);color:\\"+pColor+\\";}\\";
                        try {
                            document.styleSheets[1].deleteRule(0);document.styleSheets[1].deleteRule(0);
                            document.styleSheets[1].insertRule(rule1); document.styleSheets[1].insertRule(rule2);
                            placeholderColor = pColor;
                        } catch (e){
                            console.log(\\"set placeholderColor error!\\")
                        }
                    }
                },

                commandDOM: function (command){
                    try {new Function(\\"$\\", command)(exports.document.querySelector.bind(exports.document))} catch(e){console.log(e.message)};
                },
                command: function (command){
                    try {new Function(\\"$\\", command)(exports.document)} catch(e){console.log(e.message)};
                }
            },

            init: function (){
                if (false){
                    // setInterval(Actions.UPDATE_HEIGHT, 150);
                    Actions.UPDATE_HEIGHT();
                } else {
                    // react-native-webview There is a bug in the body and html height setting of a certain version of 100%
                    // body.style.height = docEle.clientHeight + 'px';
                }
            },

            UPDATE_HEIGHT: function() {
                if (!false) return;
                // var height = Math.max(docEle.scrollHeight, body.scrollHeight);
                var height = editor.content.scrollHeight;
                if (o_height !== height){
                    _postMessage({type: 'OFFSET_HEIGHT', data: o_height = height});
                }
            },

            UPDATE_OFFSET_Y: function (){
                if (!false) return;
                var node = anchorNode || window.getSelection().anchorNode;
                if (node){
                    var offsetY = node.offsetTop || node.parentNode.offsetTop;
                    if (offsetY){
                        _postMessage({type: 'OFFSET_Y', data: offsetY});
                    }
                }
            }
        };

        var init = function init(settings) {

            var paragraphSeparator = settings[defaultParagraphSeparatorString];
            var content = settings.element.content = createElement('div');
            content.id = 'content';
            content.contentEditable = true;
            content.spellcheck = false;
            content.autocapitalize = 'off';
            content.autocorrect = false;
            content.autocomplete = 'off';
            content.className = \\"pell-content\\";
            content.oninput = function (_ref) {
                // var firstChild = _ref.target.firstChild;
                if ((anchorNode === void 0 || anchorNode === content) && queryCommandValue(formatBlock) === ''){
                    if ( !compositionStatus ){
                        formatParagraph(true);
                        paragraphStatus = 0;
                    } else {
                        paragraphStatus = 1;
                    }
                } else if (content.innerHTML === '<br>'){
                     content.innerHTML = '';
                } else if (enterStatus && queryCommandValue(formatBlock) === 'blockquote') {
                    formatParagraph();
                }

                saveSelection();
                handleChange(_ref);
                settings.onChange();
                false && postAction({type: \\"ON_INPUT\\", data: {inputType: _ref.inputType, data: _ref.data}});
            };
            appendChild(settings.element, content);

            if (settings.styleWithCSS) exec('styleWithCSS');
            exec(defaultParagraphSeparatorString, paragraphSeparator);

            var actionsHandler = [];
            for (var k in Actions){
                if (typeof Actions[k] === 'object' && Actions[k].state){
                    actionsHandler[k] = Actions[k]
                }
            }

            function handler() {
                var activeTools = [];
                for(var k in actionsHandler){
                    if ( Actions[k].state() ){
                        activeTools.push(k);
                    }
                }
                postAction({type: 'SELECTION_CHANGE', data: activeTools});
            };

            var _handleStateDT = null;
            function handleState(){
                clearTimeout(_handleStateDT);
                _handleStateDT = setTimeout(function (){
                    handler();
                    saveSelection();
                }, 50);
            }

            function handleSelecting(event){
                event.stopPropagation();
                handleState();
            }

            function postKeyAction(event, type){
                postAction({type: type, data: {keyCode: event.keyCode, key: event.key}});
            }
            function handleKeyup(event){
                enterStatus = 0;
                _keyDown = false;
                if (event.keyCode === 8) handleSelecting (event);
                false && postKeyAction(event, \\"CONTENT_KEYUP\\")
            }
            function handleKeydown(event){
                _keyDown = true;
                 handleState();
                if (event.key === 'Enter'){
                    enterStatus = 1; // set enter true
                    var box;
                    var block = queryCommandValue(formatBlock);
                    if (anchorNode.innerHTML === '<br>' && anchorNode.parentNode !== editor.content){
                        // setCollapse(editor.content);
                    } else if (queryCommandState('insertOrderedList') && !!(box = checkboxNode(anchorNode))){
                        var node = anchorNode && anchorNode.childNodes[1];
                        if (node && node.nodeName === 'BR'){
                            cancelCheckboxList(box.parentNode);
                            event.preventDefault();
                        } else{
                            // add checkbox
                            _checkboxFlag = 1;
                        }
                    }
                    if (block === 'pre' && anchorNode.innerHTML === '<br>'){
                        // code end enter new line (Unfinished)
                        if (!anchorNode.nextSibling){
                            event.preventDefault();
                            var node = anchorNode.parentNode;
                            var br = createElement(\\"br\\");
                            node.parentNode.insertBefore(br, node.nextSibling);
                            setTimeout(function (){
                                setCollapse(br);
                            });
                        }
                    }
                }
                false && postKeyAction(event, \\"CONTENT_KEYDOWN\\");
            }
            function handleFocus (){
                editorFoucs = true;
                setTimeout(function (){
                    Actions.UPDATE_OFFSET_Y();
                });
                postAction({type: 'CONTENT_FOCUSED'});
            }
            function handleBlur (){
                editorFoucs = false;
                postAction({type: 'SELECTION_CHANGE', data: []});
                postAction({type: 'CONTENT_BLUR'});
            }
            function handleClick(event){
                var ele = event.target;
                if (ele.nodeName === 'INPUT' && ele.type === 'checkbox'){
                    // Set whether the checkbox is selected by default
                    if (ele.checked) ele.setAttribute('checked', '');
                    else ele.removeAttribute('checked');
                }
            }
            addEventListener(content, 'touchcancel', handleSelecting);
            addEventListener(content, 'mouseup', handleSelecting);
            addEventListener(content, 'touchend', handleSelecting);
            addEventListener(content, 'keyup', handleKeyup);
            addEventListener(content, 'click', handleClick);
            addEventListener(content, 'keydown', handleKeydown);
            addEventListener(content, 'blur', handleBlur);
            addEventListener(content, 'focus', handleFocus);
            addEventListener(content, 'paste', function (e) {
                // get text representation of clipboard
                var text = (e.originalEvent || e).clipboardData.getData('text/plain');

                false && postAction({type: 'CONTENT_PASTED', data: text});
                if (false) {
                    // cancel paste
                    e.preventDefault();
                    // insert text manually
                    exec(\\"insertText\\", text);
                }
            });
            addEventListener(content, 'compositionstart', function(event){
                compositionStatus = 1;
            })
            addEventListener(content, 'compositionend', function (event){
                compositionStatus = 0;
                paragraphStatus && formatParagraph(true);
            })

            var message = function (event){
                var msgData = JSON.parse(event.data), action = Actions[msgData.type];
                if (action ){
                    if ( action[msgData.name]){
                        var flag = msgData.name === 'result';
                        // insert image or link need current focus
                        flag && focusCurrent();
                        action[msgData.name](msgData.data, msgData.options);
                        flag && handleState();
                    } else {
                        action(msgData.data, msgData.options);
                    }
                }
            };
            document.addEventListener(\\"message\\", message , false);
            window.addEventListener(\\"message\\", message , false);
            document.addEventListener('mouseup', function (event) {
                event.preventDefault();
                Actions.content.focus();
                handleSelecting(event);
            });
            return {content, paragraphSeparator: paragraphSeparator};
        };

        var _handleCTime = null;
        editor = init({
            element: document.getElementById('editor'),
            defaultParagraphSeparator: 'div',
            onChange: function (){
                clearTimeout(_handleCTime);
                _handleCTime = setTimeout(function(){
                    var html = Actions.content.getHtml();
                    postAction({type: 'CONTENT_CHANGE', data: html});
                }, 50);
            }
        })
        return {
            sendEvent: function (type, data){
                event.preventDefault();
                event.stopPropagation();
                var id = event.currentTarget.id;
                if ( !id ) event.currentTarget.id = id = generateId();
                _postMessage({type, id, data});
            }
        }
    })({
        window: window.ReactNativeWebView || window.parent,
        isRN: !!window.ReactNativeWebView ,
        document: document
    });
</script>
</body>
</html>
",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Object {
                        "backgroundColor": "#ffffff",
                      },
                      Object {},
                    ]
                  }
                  useSharedProcessPool={true}
                  useWebKit={true}
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots ToastMessage Toast Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          flex={1}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            testID="toastAnimatedContainer"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#2f3941",
                  "borderLeftColor": "#5cb85c",
                  "borderLeftWidth": 5,
                  "borderRadius": 6,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 60,
                  "opacity": 1,
                  "shadowOffset": Object {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1,
                  "shadowRadius": 6,
                  "width": 340,
                }
              }
              testID="toastTouchableContainer"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "justifyContent": "center",
                      "paddingHorizontal": 25,
                    },
                    Object {
                      "backgroundColor": "#2f3941",
                      "paddingHorizontal": 15,
                    },
                  ]
                }
                testID="toastContentContainer"
              />
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2f3941",
                    "borderBottomRightRadius": 6,
                    "borderTopRightRadius": 6,
                    "elevation": 2,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingRight": 10,
                    "shadowColor": "#2f3941",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.1,
                    "shadowRadius": 6,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={25}
                  bbWidth={25}
                  fill="#ffffff"
                  focusable={false}
                  height={25}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 25,
                        "width": 25,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={25}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Show Toast"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Show Toast
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots ToastMessage Toasts 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          color="background.primary"
          flex={1}
          style={
            Array [
              Object {
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            testID="toastAnimatedContainer"
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#2f3941",
                  "borderLeftColor": "#5cb85c",
                  "borderLeftWidth": 5,
                  "borderRadius": 6,
                  "elevation": 2,
                  "flexDirection": "row",
                  "height": 60,
                  "opacity": 1,
                  "shadowOffset": Object {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0.1,
                  "shadowRadius": 6,
                  "width": 340,
                }
              }
              testID="toastTouchableContainer"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "flex-start",
                      "flex": 1,
                      "justifyContent": "center",
                      "paddingHorizontal": 25,
                    },
                    Object {
                      "backgroundColor": "#2f3941",
                      "paddingHorizontal": 15,
                    },
                  ]
                }
                testID="toastContentContainer"
              />
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2f3941",
                    "borderBottomRightRadius": 6,
                    "borderTopRightRadius": 6,
                    "elevation": 2,
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingRight": 10,
                    "shadowColor": "#2f3941",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0.1,
                    "shadowRadius": 6,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={25}
                  bbWidth={25}
                  fill="#ffffff"
                  focusable={false}
                  height={25}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 25,
                        "width": 25,
                      },
                    ]
                  }
                  vbHeight={24}
                  vbWidth={24}
                  width={25}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <RNSVGGroup
                    fill={4294967295}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M0 0h24v24H0z"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGPath
                      d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z"
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Success Toast"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Success Toast
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Error Toast"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Error Toast
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Info Toast"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Info Toast
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
          <View
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            alignItems="center"
            borderRadius={2}
            collapsable={false}
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            label="Warning Toast"
            my={10}
            nativeID="animatedComponent"
            onClick={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={12}
            pointerEvents="box-only"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2f3941",
                "borderRadius": 2,
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 10,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              }
            }
            variant="solid"
          >
            <Text
              fontFamily="inter700"
              fontSize="s"
              mx={1}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 12,
                    "marginLeft": 4,
                    "marginRight": 4,
                    "textAlign": "center",
                  },
                ]
              }
              textAlign="center"
              textStyle="solid"
            >
              Warning Toast
            </Text>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "bottom": 0,
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots ToggleSwitches Toggle Switch Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderColor="grey"
            borderRadius={5}
            borderWidth={1}
            color="background.primary"
            flexDirection="row"
            p={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderColor": "grey",
                  "borderRadius": 5,
                  "borderWidth": 1,
                  "color": "#ffffff",
                  "flexDirection": "row",
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                },
              ]
            }
          >
            <Text
              mr={2}
              style={
                Array [
                  Object {
                    "color": "#1b1f23",
                    "fontSize": 12,
                    "marginRight": 8,
                  },
                ]
              }
              textStyle="subtext"
            >
              Toggle Switch Demo
            </Text>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                collapsable={false}
                nativeID="animatedComponent"
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(255, 105, 105, 1)",
                    "borderRadius": 10,
                    "flexDirection": "row",
                    "height": 18,
                    "padding": 2,
                    "width": 38,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={Object {}}
                >
                  <Text />
                </View>
                <View
                  style={
                    Object {
                      "left": 5,
                      "position": "absolute",
                    }
                  }
                />
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "backgroundColor": "rgba(255, 255, 255, 1)",
                      "borderRadius": 7,
                      "height": 14,
                      "transform": Array [
                        Object {
                          "translateX": 20,
                        },
                      ],
                      "width": 14,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                </View>
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={Object {}}
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots ToggleSwitches Toggle Switches 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          alignItems="center"
          color="background.primary"
          flex={1}
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "color": "#ffffff",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            color="background.primary"
            my={3}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderColor="#e4e4e7"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e4e4e7",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <Text
                mr={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 12,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="subtext"
              />
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(47, 57, 65, 1)",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "height": 18,
                      "padding": 2,
                      "width": 38,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "left": 5,
                        "position": "absolute",
                      }
                    }
                  />
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1)",
                        "borderRadius": 7,
                        "height": 14,
                        "transform": Array [
                          Object {
                            "translateX": 20,
                          },
                        ],
                        "width": 14,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      nativeID="animatedComponent"
                      style={Object {}}
                    >
                      <Text />
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            color="background.primary"
            my={3}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderColor="#e4e4e7"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e4e4e7",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <Text
                mr={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 12,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="subtext"
              >
                Conversation assigned to my group
              </Text>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(47, 57, 65, 1)",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "height": 18,
                      "padding": 2,
                      "width": 38,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "left": 5,
                        "position": "absolute",
                      }
                    }
                  />
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1)",
                        "borderRadius": 7,
                        "height": 14,
                        "transform": Array [
                          Object {
                            "translateX": 20,
                          },
                        ],
                        "width": 14,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      nativeID="animatedComponent"
                      style={Object {}}
                    >
                      <Text />
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            color="background.primary"
            my={3}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderColor="#e4e4e7"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e4e4e7",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <Text
                mr={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 12,
                      "marginRight": 8,
                    },
                  ]
                }
                textStyle="subtext"
              >
                Disabled switched on toggle button
              </Text>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(47, 57, 65, 1)",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "height": 18,
                      "padding": 2,
                      "width": 38,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "left": 5,
                        "position": "absolute",
                      }
                    }
                  />
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "backgroundColor": "rgba(135, 146, 157, 1)",
                        "borderRadius": 7,
                        "height": 14,
                        "transform": Array [
                          Object {
                            "translateX": 20,
                          },
                        ],
                        "width": 14,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      nativeID="animatedComponent"
                      style={Object {}}
                    >
                      <Text />
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            color="background.primary"
            my={3}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderColor="#e4e4e7"
              color="background.primary"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e4e4e7",
                    "color": "#ffffff",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(233, 235, 237, 1)",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "height": 18,
                      "padding": 2,
                      "width": 38,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "backgroundColor": "rgba(244, 245, 247, 1)",
                        "borderRadius": 7,
                        "height": 14,
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                        ],
                        "width": 14,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      nativeID="animatedComponent"
                      style={Object {}}
                    >
                      <Text />
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "position": "absolute",
                        "right": 5,
                      }
                    }
                  />
                </View>
              </View>
              <Text
                ml={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 12,
                      "marginLeft": 8,
                    },
                  ]
                }
                textStyle="subtext"
              >
                Disabled switched off toggle button
              </Text>
            </View>
          </View>
          <View
            color="background.primary"
            my={3}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "marginBottom": 16,
                  "marginTop": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderColor="#d8dcde"
              borderRadius={5}
              borderWidth={1}
              color="background.primary"
              flexDirection="row"
              p={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#d8dcde",
                    "borderRadius": 5,
                    "borderWidth": 1,
                    "color": "#ffffff",
                    "flexDirection": "row",
                    "paddingBottom": 16,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 16,
                  },
                ]
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                nativeID="animatedComponent"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  collapsable={false}
                  nativeID="animatedComponent"
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "rgba(255, 105, 105, 1)",
                      "borderRadius": 10,
                      "flexDirection": "row",
                      "height": 18,
                      "padding": 2,
                      "width": 38,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "left": 5,
                        "position": "absolute",
                      }
                    }
                  />
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 1)",
                        "borderRadius": 7,
                        "height": 14,
                        "transform": Array [
                          Object {
                            "translateX": 20,
                          },
                        ],
                        "width": 14,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      nativeID="animatedComponent"
                      style={Object {}}
                    >
                      <Text />
                    </View>
                  </View>
                  <View
                    collapsable={false}
                    nativeID="animatedComponent"
                    style={Object {}}
                  >
                    <Text />
                  </View>
                </View>
              </View>
              <Text
                ml={2}
                style={
                  Array [
                    Object {
                      "color": "#1b1f23",
                      "fontSize": 12,
                      "marginLeft": 8,
                    },
                  ]
                }
                textStyle="subtext"
              >
                Toggle switch button with custom styles
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Touchable Touchable Demo 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          nativeID="animatedComponent"
          onClick={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={Object {}}
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "borderRadius": 0,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Storyshots Touchable Touchables 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  disableScrollViewPanResponder={true}
>
  <View>
    <View
      color="background.primary"
      flexGrow={1}
      p={10}
      style={
        Array [
          Object {
            "color": "#ffffff",
            "flexGrow": 1,
            "paddingBottom": 10,
            "paddingLeft": 10,
            "paddingRight": 10,
            "paddingTop": 10,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            Object {
              "backgroundColor": "white",
            },
          ]
        }
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          alignItems="center"
          bg="background.secondary"
          collapsable={false}
          focusable={true}
          height="30px"
          justifyContent="center"
          nativeID="animatedComponent"
          onClick={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#e4e4e7",
              "height": 30,
              "justifyContent": "center",
              "width": 100,
            }
          }
          width="100px"
        >
          <Text
            fontSize="14px"
            style={
              Array [
                Object {
                  "color": "#1b1f23",
                  "fontSize": 14,
                },
              ]
            }
            textStyle="defaultTextStyle"
          >
            Touchable
          </Text>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "bottom": 0,
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "borderRadius": 50,
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
